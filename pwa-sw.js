var cacheName="naiosoft_2020-12-07T22:35:34.767Z";const doCacheFirst=!0;var filesToCache=["44b8e15fb61f9a0bd02356c3cda4daa3.webp","93992f76a7d4fecac07c8e241d4a9408.webp","1263575ee42d8a139d5e0a6b946edb47.webp","cab5db29eb2684318aa99a88b771ea3c.webp","a9e97aa2f82fc8457d790b18f4e97242.webp","1890fb188d1c755b732d8b53f64e1208.webp","02bc8d18757667b705c4dbd79b738b07.webp","ed6e0e48633c8d5e2850658900d539a4.webp","f916d9e44a731e35ee9cf7b413017ccf.webp","4ee687f7c7198b924fe10556998024c5.webp","c5a739885e4efb7fa45d12c32f3968f1.webp","d9d94a206dfe7a432d39346b3ee98eeb.webp","19c1ff2dceda0424b143ee49820c151f.webp","96b8657eb4aaacb7ed8944517ebc57c9.svg","d5c451917849113c6dc142ca128b00e9.webp","87330e507674cc80f5abae30e1fceabc.webp","876152192afde0087eadf988deee8aac.webp","d5ab0a1e0b4a96671b461bcded8bd4c7.webp","fd04ca0f0804a17e49f7a507fb3c9bd0.svg","9fb15f27afe0f1289f94bb867c4371d8.webp","ae60f79df64bcb4e67f43c211042604d.webp","511ed6a91551982d0df721e6f7f3a0a6.webp","0eac9f23b5f76d511a32843892cabf83.webp","714e31e3acf8e9f165648ac79e025a7d.svg","8c7636fb57daa666759e1a3b7af56127.webp","4d2da2ff1ca72262ad33cbb7ec4fc16b.css","0305c415842761032c92f604146d95eb.css","df1031cdaf9d017434ab148a46d9fb12.webp","354c162271f39b0d82f6e52bdfd0c66d.webp","dcc80dc48b109f63b0eaf62fe0b6a878.webp","map.xml","4d2da2ff1ca72262ad33cbb7ec4fc16b.css.gz","96b8657eb4aaacb7ed8944517ebc57c9.svg.gz","map.xml.gz","0305c415842761032c92f604146d95eb.css.gz","fd04ca0f0804a17e49f7a507fb3c9bd0.svg.gz","714e31e3acf8e9f165648ac79e025a7d.svg.gz","firebase-sw.js","firebase-sw.js.LICENSE.txt","firebase-sw.js.LICENSE.txt.gz","firebase-sw.js.gz","robots.txt","main.8456826ca76aa87df5e2.js","singlepage.89f161852bc6c59b997c.js","favicon.png","maskable_icon_72x72.webp","maskable_icon_96x96.webp","maskable_icon_128x128.webp","maskable_icon_144x144.webp","maskable_icon_152x152.webp","maskable_icon_192x192.webp","maskable_icon_384x384.webp","maskable_icon_512x512.webp","maskable_icon_120x120.webp","maskable_icon_180x180.webp","manifest.webmanifest"];let LOG=console.log.bind(console,"[PWA]");self.addEventListener("install",(function(e){e.waitUntil(caches.open(cacheName).catch((e=>{console.error(`Error opening the cache named '${cacheName}' during install`),console.error(e)})).then((function(e){return console.info("[sw.js] cached all files"),e.addAll(filesToCache)})).catch((e=>{console.error(`Error caching files to '${cacheName}' during install`),console.error(e)})))})),self.addEventListener("fetch",(function(e){e.respondWith(caches.match(e.request).then((function(c){if(c)return c;var a=e.request.clone();return fetch(a,{credentials:"include"}).then((function(e){if(!e||200!==e.status||"basic"!==e.type)return console.error(`Failed to retrieve file '${a.url}'`),e;var c=e.clone();return caches.open(cacheName).then((function(e){return e.put(a,c)})).catch((function(e){console.error(`Failed to cache '${c.url}':`),console.error(e)})),e})).catch((e=>{console.error(`Failed to fetch '${a.url}'`),console.error(e)}))})).catch((c=>{console.error(`Error retrieving '${e.request}' from the cache`),console.error(c)})))})),self.addEventListener("activate",(function(e){LOG("Activating...",e),e.waitUntil(caches.keys().then((function(e){return Promise.all(e.map((function(e){if(e!==cacheName)return caches.delete(e)})))})).catch((e=>{console.error("Error retrieving cache keys during activation"),console.error(e)})))}));